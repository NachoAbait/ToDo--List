{"ast":null,"code":"const initialState = {\n  isOpen: false,\n  isOpen2: false,\n  listado: [],\n  tasks: [],\n  task: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return {\n        ...state\n      };\n    case \"LOGIN_USER\":\n      return {\n        ...state\n      };\n    case \"ADD_LIST\":\n      return {\n        ...state,\n        listado: [...state.listado, action.payload]\n      };\n    case \"DELETED_LIST\":\n      const newArr = state.listado.filter(task => task.id === action);\n      return {\n        ...state,\n        listado: newArr\n      };\n    case \"CHECK_ITEM\":\n      return {\n        ...state,\n        listado: action.payload\n      };\n    case \"OPEN_MODAL2\":\n      return {\n        ...state,\n        isOpen2: true\n      };\n    case \"OPEN_MODAL\":\n      return {\n        ...state,\n        isOpen: true\n      };\n    case \"CLOSE_MODAL2\":\n      return {\n        ...state,\n        isOpen2: false\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        ...state,\n        isOpen: false\n      };\n    case \"GET_TASKS\":\n      return {\n        ...state,\n        tasks: action.payload\n      };\n    case \"GET_TASK\":\n      return {\n        ...state,\n        tasks: action.payload\n      };\n    case \"PUT_TASK\":\n      return {\n        ...state\n      };\n    case \"DELETE_TASK\":\n      const deletedTaskId = action.payload._id;\n      // Filtra las tareas y devuelve todas excepto la tarea eliminada\n      const updatedTasks = state.tasks.filter(task => task.id !== deletedTaskId);\n      return {\n        ...state,\n        tasks: updatedTasks\n      };\n    case \"POST_TASK\":\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","isOpen","isOpen2","listado","tasks","task","rootReducer","state","arguments","length","undefined","action","type","payload","newArr","filter","id","deletedTaskId","_id","updatedTasks"],"sources":["C:/Users/nacho/OneDrive/Escritorio/PROYECTOS/ToDo--List/FRONT/src/REDUX/Reducer/index.js"],"sourcesContent":["const initialState = {\r\n  isOpen: false,\r\n  isOpen2: false,\r\n  listado: [],\r\n  tasks: [],\r\n  task: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"CREATE_USER\":\r\n      return { ...state };\r\n\r\n    case \"LOGIN_USER\":\r\n      return { ...state };\r\n\r\n    case \"ADD_LIST\":\r\n      return {\r\n        ...state,\r\n        listado: [...state.listado, action.payload],\r\n      };\r\n\r\n    case \"DELETED_LIST\":\r\n      const newArr = state.listado.filter((task)=> task.id === action)\r\n      return {\r\n       ...state,\r\n       listado: newArr,\r\n      }\r\n    case \"CHECK_ITEM\":\r\n      return {\r\n        ...state,\r\n        listado: action.payload,\r\n      };\r\n\r\n    case \"OPEN_MODAL2\":\r\n      return {\r\n        ...state,\r\n        isOpen2: true,\r\n      };\r\n\r\n    case \"OPEN_MODAL\":\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n      };\r\n\r\n    case \"CLOSE_MODAL2\":\r\n      return {\r\n        ...state,\r\n        isOpen2: false,\r\n      };\r\n\r\n    case \"CLOSE_MODAL\":\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n      };\r\n\r\n    case \"GET_TASKS\":\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n      };\r\n\r\n    case \"GET_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n      };\r\n\r\n    case \"PUT_TASK\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"DELETE_TASK\":\r\n      const deletedTaskId = action.payload._id;\r\n      // Filtra las tareas y devuelve todas excepto la tarea eliminada\r\n      const updatedTasks = state.tasks.filter(\r\n        (task) => task.id !== deletedTaskId\r\n      );\r\n      return {\r\n        ...state,\r\n        tasks: updatedTasks,\r\n      };\r\n\r\n    case \"POST_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload],\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,YAAY;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGL;MAAM,CAAC;IAErB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGA;MAAM,CAAC;IAErB,KAAK,UAAU;MACb,OAAO;QACL,GAAGA,KAAK;QACRJ,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAO,EAAEQ,MAAM,CAACE,OAAO;MAC5C,CAAC;IAEH,KAAK,cAAc;MACjB,MAAMC,MAAM,GAAGP,KAAK,CAACJ,OAAO,CAACY,MAAM,CAAEV,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAKL,MAAM,CAAC;MAChE,OAAO;QACN,GAAGJ,KAAK;QACRJ,OAAO,EAAEW;MACV,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGP,KAAK;QACRJ,OAAO,EAAEQ,MAAM,CAACE;MAClB,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGN,KAAK;QACRL,OAAO,EAAE;MACX,CAAC;IAEH,KAAK,YAAY;MACf,OAAO;QACL,GAAGK,KAAK;QACRN,MAAM,EAAE;MACV,CAAC;IAEH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGM,KAAK;QACRL,OAAO,EAAE;MACX,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGK,KAAK;QACRN,MAAM,EAAE;MACV,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRH,KAAK,EAAEO,MAAM,CAACE;MAChB,CAAC;IAEH,KAAK,UAAU;MACb,OAAO;QACL,GAAGN,KAAK;QACRH,KAAK,EAAEO,MAAM,CAACE;MAChB,CAAC;IAEH,KAAK,UAAU;MACb,OAAO;QACL,GAAGN;MACL,CAAC;IAEH,KAAK,aAAa;MAChB,MAAMU,aAAa,GAAGN,MAAM,CAACE,OAAO,CAACK,GAAG;MACxC;MACA,MAAMC,YAAY,GAAGZ,KAAK,CAACH,KAAK,CAACW,MAAM,CACpCV,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKC,aACxB,CAAC;MACD,OAAO;QACL,GAAGV,KAAK;QACRH,KAAK,EAAEe;MACT,CAAC;IAEH,KAAK,WAAW;MACd,OAAO;QACL,GAAGZ,KAAK;QACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEO,MAAM,CAACE,OAAO;MACxC,CAAC;IAEH;MACE,OAAO;QACL,GAAGN;MACL,CAAC;EACL;AACF;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}